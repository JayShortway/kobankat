// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.revenuecat.purchases:result>
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitCustomerInfoResult(com.revenuecat.purchases.kmp/CacheFetchPolicy = ...): kotlin/Result<cocoapods.PurchasesHybridCommon/RCCustomerInfo> // com.revenuecat.purchases.kmp.result/awaitCustomerInfoResult|awaitCustomerInfoResult@cocoapods.PurchasesHybridCommon.RCPurchases(com.revenuecat.purchases.kmp.CacheFetchPolicy){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitGetProductsResult(kotlin.collections/List<kotlin/String>): kotlin/Result<kotlin.collections/List<cocoapods.PurchasesHybridCommon/RCStoreProduct>> // com.revenuecat.purchases.kmp.result/awaitGetProductsResult|awaitGetProductsResult@cocoapods.PurchasesHybridCommon.RCPurchases(kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitLogInResult(kotlin/String): kotlin/Result<com.revenuecat.purchases.kmp.ktx/SuccessfulLogin> // com.revenuecat.purchases.kmp.result/awaitLogInResult|awaitLogInResult@cocoapods.PurchasesHybridCommon.RCPurchases(kotlin.String){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitLogOutResult(): kotlin/Result<cocoapods.PurchasesHybridCommon/RCCustomerInfo> // com.revenuecat.purchases.kmp.result/awaitLogOutResult|awaitLogOutResult@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitOfferingsResult(): kotlin/Result<cocoapods.PurchasesHybridCommon/RCOfferings> // com.revenuecat.purchases.kmp.result/awaitOfferingsResult|awaitOfferingsResult@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitPromotionalOfferResult(cocoapods.PurchasesHybridCommon/RCStoreProductDiscount, cocoapods.PurchasesHybridCommon/RCStoreProduct): kotlin/Result<cocoapods.PurchasesHybridCommon/RCPromotionalOffer> // com.revenuecat.purchases.kmp.result/awaitPromotionalOfferResult|awaitPromotionalOfferResult@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCStoreProductDiscount;cocoapods.PurchasesHybridCommon.RCStoreProduct){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitPurchaseResult(cocoapods.PurchasesHybridCommon/RCPackage, cocoapods.PurchasesHybridCommon/RCPromotionalOffer): kotlin/Result<com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.result/awaitPurchaseResult|awaitPurchaseResult@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCPackage;cocoapods.PurchasesHybridCommon.RCPromotionalOffer){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitPurchaseResult(cocoapods.PurchasesHybridCommon/RCPackage, kotlin/Boolean? = ..., kotlin/String? = ..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode = ...): kotlin/Result<com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.result/awaitPurchaseResult|awaitPurchaseResult@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCPackage;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitPurchaseResult(cocoapods.PurchasesHybridCommon/RCStoreProduct, cocoapods.PurchasesHybridCommon/RCPromotionalOffer): kotlin/Result<com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.result/awaitPurchaseResult|awaitPurchaseResult@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCStoreProduct;cocoapods.PurchasesHybridCommon.RCPromotionalOffer){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitPurchaseResult(cocoapods.PurchasesHybridCommon/RCStoreProduct, kotlin/Boolean? = ..., kotlin/String? = ..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode = ...): kotlin/Result<com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.result/awaitPurchaseResult|awaitPurchaseResult@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCStoreProduct;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitPurchaseResult(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Boolean? = ..., kotlin/String? = ..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode = ...): kotlin/Result<com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.result/awaitPurchaseResult|awaitPurchaseResult@cocoapods.PurchasesHybridCommon.RCPurchases(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitRestoreResult(): kotlin/Result<cocoapods.PurchasesHybridCommon/RCCustomerInfo> // com.revenuecat.purchases.kmp.result/awaitRestoreResult|awaitRestoreResult@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitSyncAttributesAndOfferingsIfNeededResult(): kotlin/Result<cocoapods.PurchasesHybridCommon/RCOfferings> // com.revenuecat.purchases.kmp.result/awaitSyncAttributesAndOfferingsIfNeededResult|awaitSyncAttributesAndOfferingsIfNeededResult@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).com.revenuecat.purchases.kmp.result/awaitSyncPurchasesResult(): kotlin/Result<cocoapods.PurchasesHybridCommon/RCCustomerInfo> // com.revenuecat.purchases.kmp.result/awaitSyncPurchasesResult|awaitSyncPurchasesResult@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
