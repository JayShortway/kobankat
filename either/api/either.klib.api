// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.shortway.kobankat:either>
final class io.shortway.kobankat.either/FailedPurchase { // io.shortway.kobankat.either/FailedPurchase|null[0]
    constructor <init>(io.shortway.kobankat/PurchasesError, kotlin/Boolean) // io.shortway.kobankat.either/FailedPurchase.<init>|<init>(io.shortway.kobankat.PurchasesError;kotlin.Boolean){}[0]
    final fun component1(): io.shortway.kobankat/PurchasesError // io.shortway.kobankat.either/FailedPurchase.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // io.shortway.kobankat.either/FailedPurchase.component2|component2(){}[0]
    final fun copy(io.shortway.kobankat/PurchasesError =..., kotlin/Boolean =...): io.shortway.kobankat.either/FailedPurchase // io.shortway.kobankat.either/FailedPurchase.copy|copy(io.shortway.kobankat.PurchasesError;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.shortway.kobankat.either/FailedPurchase.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.shortway.kobankat.either/FailedPurchase.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.shortway.kobankat.either/FailedPurchase.toString|toString(){}[0]
    final val error // io.shortway.kobankat.either/FailedPurchase.error|{}error[0]
        final fun <get-error>(): io.shortway.kobankat/PurchasesError // io.shortway.kobankat.either/FailedPurchase.error.<get-error>|<get-error>(){}[0]
    final val userCancelled // io.shortway.kobankat.either/FailedPurchase.userCancelled|{}userCancelled[0]
        final fun <get-userCancelled>(): kotlin/Boolean // io.shortway.kobankat.either/FailedPurchase.userCancelled.<get-userCancelled>|<get-userCancelled>(){}[0]
}
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitCustomerInfoEither(io.shortway.kobankat/CacheFetchPolicy =...): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCCustomerInfo> // io.shortway.kobankat.either/awaitCustomerInfoEither|awaitCustomerInfoEither@cocoapods.PurchasesHybridCommon.RCPurchases(io.shortway.kobankat.CacheFetchPolicy){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitGetProductsEither(kotlin.collections/List<kotlin/String>): arrow.core/Either<io.shortway.kobankat/PurchasesError, kotlin.collections/List<cocoapods.PurchasesHybridCommon/RCStoreProduct>> // io.shortway.kobankat.either/awaitGetProductsEither|awaitGetProductsEither@cocoapods.PurchasesHybridCommon.RCPurchases(kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitLogInEither(kotlin/String): arrow.core/Either<io.shortway.kobankat/PurchasesError, io.shortway.kobankat.ktx/SuccessfulLogin> // io.shortway.kobankat.either/awaitLogInEither|awaitLogInEither@cocoapods.PurchasesHybridCommon.RCPurchases(kotlin.String){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitLogOutEither(): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCCustomerInfo> // io.shortway.kobankat.either/awaitLogOutEither|awaitLogOutEither@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitOfferingsEither(): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCOfferings> // io.shortway.kobankat.either/awaitOfferingsEither|awaitOfferingsEither@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitPromotionalOfferEither(cocoapods.PurchasesHybridCommon/RCStoreProductDiscount, cocoapods.PurchasesHybridCommon/RCStoreProduct): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCPromotionalOffer> // io.shortway.kobankat.either/awaitPromotionalOfferEither|awaitPromotionalOfferEither@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCStoreProductDiscount;cocoapods.PurchasesHybridCommon.RCStoreProduct){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitPurchaseEither(cocoapods.PurchasesHybridCommon/RCPackage, cocoapods.PurchasesHybridCommon/RCPromotionalOffer): arrow.core/Either<io.shortway.kobankat.either/FailedPurchase, io.shortway.kobankat.ktx/SuccessfulPurchase> // io.shortway.kobankat.either/awaitPurchaseEither|awaitPurchaseEither@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCPackage;cocoapods.PurchasesHybridCommon.RCPromotionalOffer){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitPurchaseEither(cocoapods.PurchasesHybridCommon/RCPackage, kotlin/Boolean? =..., kotlin/String? =..., io.shortway.kobankat.models/GoogleReplacementMode =...): arrow.core/Either<io.shortway.kobankat.either/FailedPurchase, io.shortway.kobankat.ktx/SuccessfulPurchase> // io.shortway.kobankat.either/awaitPurchaseEither|awaitPurchaseEither@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCPackage;kotlin.Boolean?;kotlin.String?;io.shortway.kobankat.models.GoogleReplacementMode){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitPurchaseEither(cocoapods.PurchasesHybridCommon/RCStoreProduct, cocoapods.PurchasesHybridCommon/RCPromotionalOffer): arrow.core/Either<io.shortway.kobankat.either/FailedPurchase, io.shortway.kobankat.ktx/SuccessfulPurchase> // io.shortway.kobankat.either/awaitPurchaseEither|awaitPurchaseEither@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCStoreProduct;cocoapods.PurchasesHybridCommon.RCPromotionalOffer){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitPurchaseEither(cocoapods.PurchasesHybridCommon/RCStoreProduct, kotlin/Boolean? =..., kotlin/String? =..., io.shortway.kobankat.models/GoogleReplacementMode =...): arrow.core/Either<io.shortway.kobankat.either/FailedPurchase, io.shortway.kobankat.ktx/SuccessfulPurchase> // io.shortway.kobankat.either/awaitPurchaseEither|awaitPurchaseEither@cocoapods.PurchasesHybridCommon.RCPurchases(cocoapods.PurchasesHybridCommon.RCStoreProduct;kotlin.Boolean?;kotlin.String?;io.shortway.kobankat.models.GoogleReplacementMode){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitPurchaseEither(io.shortway.kobankat.models/SubscriptionOption, kotlin/Boolean? =..., kotlin/String? =..., io.shortway.kobankat.models/GoogleReplacementMode =...): arrow.core/Either<io.shortway.kobankat.either/FailedPurchase, io.shortway.kobankat.ktx/SuccessfulPurchase> // io.shortway.kobankat.either/awaitPurchaseEither|awaitPurchaseEither@cocoapods.PurchasesHybridCommon.RCPurchases(io.shortway.kobankat.models.SubscriptionOption;kotlin.Boolean?;kotlin.String?;io.shortway.kobankat.models.GoogleReplacementMode){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitRestoreEither(): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCCustomerInfo> // io.shortway.kobankat.either/awaitRestoreEither|awaitRestoreEither@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitSyncAttributesAndOfferingsIfNeededEither(): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCOfferings> // io.shortway.kobankat.either/awaitSyncAttributesAndOfferingsIfNeededEither|awaitSyncAttributesAndOfferingsIfNeededEither@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
final suspend fun (cocoapods.PurchasesHybridCommon/RCPurchases).io.shortway.kobankat.either/awaitSyncPurchasesEither(): arrow.core/Either<io.shortway.kobankat/PurchasesError, cocoapods.PurchasesHybridCommon/RCCustomerInfo> // io.shortway.kobankat.either/awaitSyncPurchasesEither|awaitSyncPurchasesEither@cocoapods.PurchasesHybridCommon.RCPurchases(){}[0]
