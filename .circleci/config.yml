version: 2.1

orbs:
  android: circleci/android@2.5.0

commands:
  install-android-sdk-on-macos:
    description: Install the Android SDK on macOS
    steps:
      - run:
          name: Install Android SDK commandline tools
          command: brew install --cask android-commandlinetools
      - run:
          name: Set Android SDK environment variables
          command: |
            echo 'export ANDROID_HOME="$HOMEBREW_PREFIX/share/android-commandlinetools"' >> "$BASH_ENV"
            echo 'export PATH="$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"' >> "$BASH_ENV"
      - android/accept-licenses
      - run:
          name: Install Android SDK platform tools
          command: sdkmanager "platform-tools"

executors:
  jdk17:
    docker:
      - image: cimg/openjdk:17.0
  xcode15:
    macos:
      xcode: 15.4.0
    resource_class: macos.m1.medium.gen1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
  detekt:
    executor: jdk17
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - android/restore-gradle-cache
      - run:
          name: Run Detekt on commonMain
          command: ./gradlew detektCommonMain
      - android/save-gradle-cache
      - run:
          name: Collect Detekt HTML reports
          command: mkdir -p artifacts/detekt && mv build/reports/detekt/*.html artifacts/detekt/
      - store_artifacts:
          path: artifacts/detekt
          destination: detekt

  validate-binary-compatibility:
    executor: xcode15
    steps:
      - install-android-sdk-on-macos:
      - checkout
      - android/restore-gradle-cache
      - run:
          name: Validate binary compatibility
          command: ./gradlew apiCheck
      - android/save-gradle-cache

#  deploy-snapshot:
#    executor: xcode15
#    steps:
#      - install-android-sdk-on-macos:
#      - checkout
#      - android/restore-gradle-cache:
#      - android/restore-build-cache:
#      - prepare-signing-key
#      - run:
#        name: Publish snapshot to Maven Central
#        command: ./gradlew publishAllPublicationsToCentralPortal --no-configuration-cache
#        env:
#          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.RC_SONATYPE_CENTRAL_USERNAME }}
#          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.RC_SONATYPE_CENTRAL_PASSWORD }}
#          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.RC_ARTIFACT_SIGNING_PRIVATE_KEY }}
#          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.RC_ARTIFACT_SIGNING_PRIVATE_KEY_PASSWORD }}
#      - android/save-gradle-cache:
#      - android/save-build-cache:

workflows:
  build-test-deploy:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - detekt
      - validate-binary-compatibility
